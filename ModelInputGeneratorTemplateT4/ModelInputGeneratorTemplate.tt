<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
    /* Parameters */
    string fileInCSV = this.Host.ResolvePath("Data/people-100.csv");
    string nameSpace = "InputModelNameSpace";
    string className = "InputModel";    
    char chSeparator = ',';
    /* End Parameters */
    
    string[] columns = System.IO.File.ReadLines(fileInCSV).Take(1).First().Split(new char[] { chSeparator });
    string[] firstLn = System.IO.File.ReadLines(fileInCSV).Skip(1).Take(1).First().Split(new char[] { chSeparator });
#>
// ------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a T4 template.
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Microsoft.ML.Data;

namespace <#=nameSpace#>
{
    public class <#=className#>
    {
<#for (int i = 0; i < columns.Length; i++)
{#>
        [ColumnName("<#=columns[i]#>"),LoadColumn(<#=i#>)]
        public <#=GetTypeForString(firstLn[i])#> <#=columns[i].Substring(0, 1).ToUpper() + columns[i].Substring(1).Replace(" ", string.Empty)#> { get; set; }

<#}#>
    }
}

<#+
        private static string GetTypeForString (string str)
        {
            string type = string.Empty;

            if (Boolean.TryParse(str, out bool ignoreBool))
                type = "bool";
            else if (int.TryParse(str, out int ignoreInt))
                type = "int";
            else if (float.TryParse(str, out float ignoreFloat))
                type = "float";            
            else if (DateTime.TryParse(str, out DateTime ignoreDateTime))
                type = "DateTime";
            else
                type = "string";

            return type;
        }
#>